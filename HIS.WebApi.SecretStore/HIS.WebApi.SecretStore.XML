<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HIS.WebApi.SecretStore</name>
    </assembly>
    <members>
        <member name="T:HIS.WebApi.SecretStore.SwaggerConfig">
            <summary>
            Configuers Swagger
            </summary>
        </member>
        <member name="M:HIS.WebApi.SecretStore.SwaggerConfig.RegisterSwagger">
            <summary>
            Registers the Swagger configuration
            </summary>
        </member>
        <member name="T:HIS.WebApi.SecretStore.UnityConfig">
            <summary>
            Config Class for Unity-IoC-Component
            </summary>
        </member>
        <member name="M:HIS.WebApi.SecretStore.UnityConfig.RegisterComponents">
            <summary>
            Specifies the IoC-Mappings
            </summary>
        </member>
        <member name="T:HIS.WebApi.SecretStore.WebApiConfig">
            <summary>
            Web Application Settings
            </summary>
        </member>
        <member name="M:HIS.WebApi.SecretStore.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Registers the Web Application Settings
            </summary>
            <param name="config">http configuration</param>
        </member>
        <member name="T:HIS.WebApi.SecretStore.Controllers.ClientController">
            <summary>
            Gets access to Client Store
            </summary>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Controllers.ClientController.#ctor(HIS.WebApi.SecretStore.Repositories.ISecretRepository)">
            <summary>
            Creates a new instance of this controller
            </summary>
            <param name="repository">used repository</param>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Controllers.ClientController.FindClientAsync(System.String)">
            <summary>
            Find a Client by its Id
            </summary>
            <param name="clientId">Id if the Client</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Controllers.ClientController.CreateAsync(HIS.WebApi.SecretStore.Data.ClientViewModel)">
            <summary>
            Adds a Client to use the Auth Server
            </summary>
            <param name="clientModel">Client Data</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Controllers.ClientController.DeleteClientAsync(System.String)">
            <summary>
            Removes a Client
            </summary>
            <param name="clientId">Id of the client to delete</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Controllers.ClientController.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository">
            <summary>
            A Client Store which uses MongoDb
            </summary>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository.#ctor(System.String)">
            <summary>
            Creates a new MongoDbSecretRepository object
            </summary>
            <param name="connection">connection string</param>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository.AddClientAsync(System.String,System.String,HIS.WebApi.SecretStore.Data.Enums.ApplicationType,System.Int32)">
            <summary>
            Add a new Client to the Database
            </summary>
            <param name="name">Client name</param>
            <param name="allowOrigin">allowed origins</param>
            <param name="type">Application Type</param>
            <param name="timeSpan">Type Span in Month</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository.RemoveClientAsync(System.String)">
            <summary>
            Removes the given client
            </summary>
            <param name="clientId">Id of the Client</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository.FindClientAsync(System.String)">
            <summary>
            Find a client by its id
            </summary>
            <param name="clientId">Id of a client</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository.FindClientByNameAsync(System.String)">
            <summary>
            Find a client by its name
            </summary>
            <param name="clientName">name of a client</param>
            <returns></returns>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Repositories.MongoDbSecretRepository.Dispose">
            <summary>
            Disposes this Object
            </summary>
        </member>
        <member name="M:HIS.WebApi.SecretStore.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
            Get's fired when the applications is started by the host
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
