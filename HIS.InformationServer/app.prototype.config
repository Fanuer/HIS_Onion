<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="onion">
      <section name="server" type="Onion.Server.Configuration.OnionServerSectionHandler, Onion.Server.Impl" />
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>

  <onion>
    <server connectionString="user id=username;password=password;server=localhost;database=ONION">
      <cacheSettings 
        content="64m"
        childrenNames="16m" 
        parentIdentities="50000"
        paths="50000"
        changesets.content="64m"
      />
      <userRepositories>
        <!--
          username & password  only required, if the service account does not have the required permission to read the directory
          mask                 optional parameter
          importNewUsers       automatically import the user in onion.net if not exists
        -->
        <!--activeDirectory
            domain="yourdomain"
            importNewUsers="true"
            synchronizeDisplayNameOn="Login"
        >
          <pattern expression="([\w-\. ]+)@domain$" repositoryIdentity="{1}" options="IgnoreCase,ECMAScript" />

          <badLogonBehavior count="2" releaseLock="PT2M" /-->
          <!--
            synchronizeOn       Login/Never
            generalAccess       optional group, that is used to filter access to this system
            editor              mapping of the editor role
            administrator       mapping of the administrator role
            userManager         mapping of the usermanager role
            schemaManager       mapping of the schemamanager role
          -->
          <!-- 
            generalAccess="Domänen-Benutzer"
          -->
        <!--roleMapping
            synchronizeOn="Login"
            generalAccess="Domänen-Benutzer"
            administrator="Administratoren"
            editor="*"
          />
          <groupMapping
            synchronizeOn="Login"
          >
            <group>Editors</group>
            <group name="Administratoren">Developers</group>
          </groupMapping>
        </activeDirectory-->
        <!--ldap
          server="yourldapserver:636"
          authenticationType="Basic"
          protocolVersion="3"
          secureSocketLayer="true"
          userGroupQueryDN="o=onion"
          userGroupQueryFilter="(&amp;(objectClass=groupOfNames)(Member={0}))"
          userGroupQueryScope="OneLevel"
          importNewUsers="true"
          synchronizeDisplayNameOn="Login"
          displayNameAttribute="fullName"
        >
          <pattern expression="([\w-\. ]+)@edirectory$" repositoryIdentity="cn={1},o=onion" options="IgnoreCase,ECMAScript" />
          <badLogonBehavior count="3" releaseLock="PT2M" />
          <roleMapping
            synchronizeOn="Login"
            administrator="cn=admins,o=onion"
          />
          <groupMapping
            synchronizeOn="Login"
          >
            <group name="cn=admins,o=onion">Press</group>
          </groupMapping>
        </ldap-->
        <internalDirectory>
          <badLogonBehavior count="3" releaseLock="PT1M"/>
        </internalDirectory>
      </userRepositories>      
    </server>
  </onion>

  <system.runtime.remoting>
    <application>
      <service>
        <wellknown type="Onion.Server.XmlServer, Onion.Server.Impl" objectUri="onion/server" mode="Singleton" displayName="Onion Server" />
      </service>
      <channels>
        <channel name="Onion Server Tcp" ref="tcp" port="8087">
          <serverProviders>
            <formatter ref="binary" typeFilterLevel="Full" />
          </serverProviders>
        </channel>
        
        <!-- if you want to use soap as the communication protocol -->
        <!--
        <channel name="Onion Server Http" ref="http" port="8088" useIpAddress="true" bindTo="127.0.0.1">
          <serverProviders>
            <formatter ref="soap" typeFilterLevel="Full" />
          </serverProviders>
        </channel>
        -->
      </channels>
    </application>
    <customErrors mode="off"/>
  </system.runtime.remoting>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1210">
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>

  <log4net>
    <appender name="DebugAppender" type="log4net.Appender.RollingFileAppender">
      <file value="logs\\debug.log" />
      <param name="AppendToFile" value="true" />
      <rollingStyle value="Size" />
	    <maxSizeRollBackups value="10" />
	    <maximumFileSize value="512KB" />
	    <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d [%t] %-5p %c %x - %m%n" />
      </layout>
    </appender>

	  <root>
		  <level value="INFO" /> 
		  <appender-ref ref="DebugAppender" /> 
	  </root>
  </log4net>
</configuration>
