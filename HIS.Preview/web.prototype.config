<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="onion">
      <section name="license" type="Onion.Common.Licensing.OnionLicenseConfigurationSection, Onion.Common" />
      <section name="fileStorages" type="Onion.Common.FileStorage.FileStoragesSection, Onion.Common" />
      <section name="renderengine" type="Onion.RenderEngine.Configuration.RenderEngineConfigurationHandler, Onion.RenderEngine.Impl"/>
      <section name="renderengine.web" type="Onion.RenderEngine.Web.Configuration.WebConfigurationHandler, Onion.RenderEngine.Web"/>
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <onion>
    <license server="tcp://server:port/onion/server" />
    <fileStorages>
      <adapters>
        <!--add name="Onion.RenderEngine.Cache" storageType="Temporary" implementation="Onion.Common.FileStorage.NetFileStorage, Onion.Common">
          <settings><add name="path" value="d:\cache\web" /></settings>
        </add-->
      </adapters>
    </fileStorages>
    <renderengine.web singleton="true" sessionBasedContext="true" type="Onion.RenderEngine.Tracing.TraceableXmlRenderEngine, Onion.RenderEngine.Impl">
      <binaryHandlers>
        <handler namespace="http://onionworks.net/2004/data" rootNode="secureBinary" type="Onion.RenderEngine.DataSource.SecureBinaryHandler, Onion.RenderEngine.DataSource"/>
        <handler namespace="http://onionworks.net/2006/data/editing" rootNode="secureWebResponse" type="Onion.RenderEngine.DataSource.Editing.SecureBinaryHandler, Onion.RenderEngine.DataSource"/>
        <handler namespace="http://onionworks.net/2006/data/personalization" rootNode="secureWebResponse" type="Onion.RenderEngine.DataSource.Editing.SecureBinaryHandler, Onion.RenderEngine.DataSource"/>
      </binaryHandlers>
    </renderengine.web>
    <renderengine>
      <xsltRepository type="Onion.RenderEngine.XsltRepository.OnionDataSourceXsltRepository, Onion.RenderEngine.Impl">
        <rootFolders autoConfiguration="/Editor V2/Modulesystem/Webserversettings/Preview"/>
      </xsltRepository>
      <modules>
        <module type="Onion.RenderEngine.DataSource.OnionModule, Onion.RenderEngine.DataSource">
          <catalogBuilder id="onion://data/objects/1" method="xml.crawler" revalidationInterval="10" initialBuildDelay="5" ramDirectory="true" />
        </module>
        <module type="Onion.RenderEngine.Extensions.CoreModule, Onion.RenderEngine.Impl"/>
        <module type="Onion.RenderEngine.Web.Extensions.AspNetModule, Onion.RenderEngine.Web">
          <genericForms captchaHandlerPath="~/captcha.ashx" />
        </module>
        <module type="Onion.RenderEngine.EditorModuleSystem.CommonModule, Onion.RenderEngine.EditorModuleSystem">
          <editor path="Editor V2/Modulesystem" />
        </module>
        <module type="Onion.RenderEngine.CommonDataSources.DataSourceModule, Onion.RenderEngine.CommonDataSources"/>
        <module type="Onion.RenderEngine.CommonModules.StructureAbstractionModule, Onion.RenderEngine.CommonModules"/>
        <!--module type="Onion.RenderEngine.ImageServiceClient.ImageServiceModule, Onion.RenderEngine.ImageServiceClient">
          <imageServer uri="tcp://server:port/onion/imageserver" priority="1"/>
        </module-->
        <!--module type="Onion.RenderEngine.CommonModules.XslFoModule, Onion.RenderEngine.CommonModules">
          <foProcessor cliser="tcp://image01.web.getit.de:6570"/>
        </module-->
        <module type="Onion.RenderEngine.CommonModules.CompressionModule, Onion.RenderEngine.CommonModules"/>
      </modules>
      <dataSources>
        <source xlinkPrefix="onion" type="Onion.RenderEngine.DataSource.OnionDataSource, Onion.RenderEngine.DataSource">
          <!-- versionFilter: final|none -->
          <onionServer url="tcp://server:port/onion/server" username="webserver" password="webserver" versionFilter="none">
            <!--application username="webapplication" password="webapplication"/-->
          </onionServer>
        </source>
      </dataSources>
      <cacheSettings>
        <resources lruMaximumCapacity="100000" storageType="memory" invalidationMode="remove">
          <dataSource prefix="onion" lruValueCapacity="40000" lruMaximumCapacity="100000" storageType="memorydom" invalidationMode="recomputeIfDependants"/>
        </resources>
        <output>
          <literal lruMaximumCapacity="50000"/>
          <xml lruCapacityType="weight" lruValueCapacity="25000" lruMaximumCapacity="100000"/>
          <binary lruValueCapacity="150000" lruMaximumCapacity="150000"/>
          <userDefinedSlots lruCapacityType="weight" lruMaximumCapacity="25000">
            <!-- slot id="downloads" lruMaximumCapacity="100000" /-->
          </userDefinedSlots>
        </output>
      </cacheSettings>
      <uriFormat staticFormatterPath="~/binary.ashx/data" staticParserPath="~/binary.ashx/data">
        <!-- cache behaviour="default" instances="5000" /-->
        <builder type="Onion.RenderEngine.DataSource.OnionUriPathFormat, Onion.RenderEngine.DataSource">
          <format literal-path="~/page.ashx" binary-path="~/binary.ashx" lookup-method="uri" lookup-method-parameter="language" dispatcher-method="root-dispatcher" binary-lookup-method="binary-uri" binary-lookup-method-parameter="select" quicklinks-method="none" force-lower-case="true" invalid-character="-" />
        </builder>
        <parser type="Onion.RenderEngine.DataSource.OnionUriPathFormat, Onion.RenderEngine.DataSource">
          <format lookup-method="uri" dispatcher-method="root-dispatcher" lookup-method-parameter="language" quicklinks-method="none" force-lower-case="true" invalid-character="-" />
        </parser>
        
				<!-- use these settings if rewrite rules are activated -->
        <!--builder type="Onion.RenderEngine.DataSource.OnionUriPathFormat, Onion.RenderEngine.DataSource">
          <format literal-path="~/" binary-path="~/binaries" lookup-method="uri" lookup-method-parameter="language" dispatcher-method="root-dispatcher" binary-lookup-method="binary-uri" binary-lookup-method-parameter="select" quicklinks-method="none" force-lower-case="true" invalid-character="-" />
        </builder>
        <parser type="Onion.RenderEngine.DataSource.OnionUriPathFormat, Onion.RenderEngine.DataSource">
          <format literal-path="~/" binary-path="~/binaries" lookup-method="uri" dispatcher-method="root-dispatcher" lookup-method-parameter="language" quicklinks-method="none" force-lower-case="true" invalid-character="-" />
        </parser-->
      </uriFormat>
      <storage clusters="4"/>
    </renderengine>
  </onion>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1210">
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>

  <log4net>
    <appender name="DebugAppender" type="log4net.Appender.RollingFileAppender">
      <file value="logs\debug.log"/>
      <param name="AppendToFile" value="true"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="10"/>
      <maximumFileSize value="500KB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%d [%t] %-5p %c %x - %m%n"/>
      </layout>
    </appender>
    <root>
      <level value="ERROR"/>
      <appender-ref ref="DebugAppender"/>
    </root>
  </log4net>
  <system.web>
    <compilation defaultLanguage="c#" debug="true" targetFramework="4.0"/>
    <sessionState mode="StateServer"/>
    <trace enabled="true" requestLimit="100" pageOutput="false" traceMode="SortByTime" localOnly="false"/>
    <customErrors mode="Off"/>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <httpRuntime requestValidationMode="2.0" />
  </system.web>
  <system.webServer>
    <handlers>
      <add name="captcha" verb="*" path="captcha.ashx" type="Onion.RenderEngine.Web.GenericForms.BotDetect.HttpHandler.CaptchaHandler, Onion.RenderEngine.Web"/>
      <add name="page" verb="*" path="page.ashx" type="Onion.RenderEngine.Web.WebPageHttpHandler, Onion.RenderEngine.Web"/>
      <add name="binary" verb="GET, HEAD" path="binary.ashx" type="Onion.RenderEngine.Web.BinaryHttpHandler, Onion.RenderEngine.Web"/>
      <add name="trace" verb="GET" path="trace.ashx" type="Onion.RenderEngine.Web.Develop.InstanceGraphHttpHandler, Onion.RenderEngine.Web"/>
      <add name="debug" verb="*" path="debug.ashx" type="Onion.RenderEngine.Web.Develop.DebugWebPageHttpHandler, Onion.RenderEngine.Web"/>
      <add name="preview" verb="*" path="preview.ashx" type="Onion.RenderEngine.Web.PreviewHttpHandler, Onion.RenderEngine.Web"/>
      <add name="interprocess" verb="POST" path="interprocess.ashx" type="Onion.RenderEngine.Web.Editor.InterprocessHandler, Onion.RenderEngine.Web"/>
      <add name="xsl-editor" verb="GET" path="xsl-editor.ashx" type="Onion.RenderEngine.Web.Editor.TrackerInfoHttpHandler, Onion.RenderEngine.Web"/>
      <add name="xml" verb="GET" path="xml.ashx" type="Onion.RenderEngine.Web.DataSourceHttpHandler, Onion.RenderEngine.Web"/>
      <add name="pxml" verb="GET" path="pxml.ashx" type="Onion.RenderEngine.Web.Develop.ProgressiveDocumentViewHandler, Onion.RenderEngine.Web"/>
      <add name="autoConfig" verb="GET" path="autoConfig.ashx" type="Onion.RenderEngine.DataSource.OnionAutoConfigHandler, Onion.RenderEngine.DataSource"/>
      <add name="cacheStatistics" verb="GET" path="cacheStatistics.ashx" type="Onion.RenderEngine.Web.CacheStatisticsHandler, Onion.RenderEngine.Web"/>
    </handlers>
    <modules>
      <add type="Onion.RenderEngine.Web.RenderEngineWebModule, Onion.RenderEngine.Web" name="RenderEngineWebModule"/>      
    </modules>
    
    <!--rewrite>
      <rules>
        <clear />
        <rule name="cachestatistics" patternSyntax="Wildcard" stopProcessing="true">
          <match url="cachestatistics.ashx" />
          <conditions logicalGrouping="MatchAll" />
          <action type="Rewrite" url="cachestatistics.ashx" />
        </rule>
        <rule name="trace" patternSyntax="Wildcard" stopProcessing="true">
          <match url="trace.axd" />
          <conditions logicalGrouping="MatchAll" />
          <action type="Rewrite" url="trace.axd" />
        </rule>
        <rule name="Binaries" patternSyntax="Wildcard" stopProcessing="true">
          <match url="binaries*" />
          <conditions logicalGrouping="MatchAll" />
          <action type="Rewrite" url="~/binary.ashx{R:1}" />
        </rule>
        <rule name="Catch all" patternSyntax="Wildcard" stopProcessing="true">
          <match url="*" />
          <conditions logicalGrouping="MatchAll" />
          <action type="Rewrite" url="~/page.ashx/{R:0}" />
        </rule>
      </rules>
    </rewrite-->
  </system.webServer>
</configuration>